{"ast":null,"code":"const getBooks = async () => {\n  try {\n    let response = await fetch(\"/api/books\", {\n      method: \"GET\"\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst addBooks = async reqBody => {\n  try {\n    let response = await fetch(\"/api/books\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(reqBody)\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst deleteBooks = async bookId => {\n  try {\n    let response = await fetch(`/api/books/${bookId}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst updateBooks = async reqBody => {\n  try {\n    let response = await fetch(`/api/books/${reqBody._id}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(reqBody)\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst getBookById = async bookId => {\n  try {\n    let response = await fetch(`/api/books/${bookId}`, {\n      method: \"GET\"\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst submitReview = async reqBody => {\n  try {\n    let response = await fetch(`/api/books/${reqBody.bookId}/review`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(reqBody)\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst deleteReview = async (bookId, reviewId) => {\n  try {\n    let response = await fetch(`/api/books/${bookId}/review/${reviewId}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport { getBooks, addBooks, deleteBooks, updateBooks, getBookById, submitReview, deleteReview };","map":{"version":3,"names":["getBooks","response","fetch","method","json","err","console","log","addBooks","reqBody","headers","Accept","credentials","body","JSON","stringify","deleteBooks","bookId","updateBooks","_id","getBookById","submitReview","deleteReview","reviewId"],"sources":["C:/Users/Obbi/Documents/bootcamp challenges/Bookie/Bookie/client/src/service/index.js"],"sourcesContent":["const getBooks = async () => {\r\n  try {\r\n    let response = await fetch(\"/api/books\", { method: \"GET\" });\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst addBooks = async (reqBody) => {\r\n  try {\r\n    let response = await fetch(\"/api/books\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(reqBody),\r\n    });\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst deleteBooks = async (bookId) => {\r\n  try {\r\n    let response = await fetch(`/api/books/${bookId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst updateBooks = async (reqBody) => {\r\n  try {\r\n    let response = await fetch(`/api/books/${reqBody._id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(reqBody),\r\n    });\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst getBookById = async (bookId) => {\r\n  try {\r\n    let response = await fetch(`/api/books/${bookId}`, { method: \"GET\" });\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst submitReview = async (reqBody) => {\r\n  try {\r\n    let response = await fetch(`/api/books/${reqBody.bookId}/review`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(reqBody),\r\n    });\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst deleteReview = async (bookId, reviewId) => {\r\n  try {\r\n    let response = await fetch(`/api/books/${bookId}/review/${reviewId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport {\r\n  getBooks,\r\n  addBooks,\r\n  deleteBooks,\r\n  updateBooks,\r\n  getBookById,\r\n  submitReview,\r\n  deleteReview,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}